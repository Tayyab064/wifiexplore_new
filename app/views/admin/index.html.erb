<!--START PAGE CONTENT WRAPPER -->
<div class="page-content-wrapper ">
  <!-- START PAGE CONTENT -->
  <div class="content" style="padding-bottom: 0px;">
    <!-- START CONTAINER FLUID -->
    <div class="row">
      <h2 style="text-align: center;"></h2>
      <div class="col-md-12">
        <section id="map" style="height: 450px !important;"></section> 
      </div>  
    </div>
    <hr>
    <div class="row">
      <div class="col-md-12">
        <div id="chart-container"></div>
      </div>
    </div>
    <hr>
    <div class="row">
     <div class="col-md-7">
        <div id="report-container"></div>
     </div>
      <div class="col-md-5">
        <div id="conn-container"></div>
      </div>
    </div>
    <!-- END CONTAINER FLUID -->
  </div>
  <!-- END PAGE CONTENT -->
</div>

<script
  src="https://code.jquery.com/jquery-3.2.1.min.js"
  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
  crossorigin="anonymous"></script>
<script type="text/javascript" src="../plugin/fusionchart/fusioncharts.js"></script>
<script type="text/javascript" src="../plugin/fusionchart/fusioncharts.powercharts.js"></script>
<script type="text/javascript" src="../plugin/fusionchart/fusioncharts.widgets.js"></script>
<script type="text/javascript" src="../plugin/fusionchart/fusioncharts.theme.fint.js"></script>

<script type="text/javascript">
  FusionCharts.ready(function () {
    var vstrChart = new FusionCharts({
        type: 'msline',
        renderAt: 'chart-container',
        width: '100%',
        height: '450',
        dataFormat: 'json',
        dataSource: {
            "chart": {
                "caption": "Earning",
                "subCaption": "Earning Vs Withdraw",
                "xAxisName": "Month",
                "yAxisName": "Price(K)",                
                "theme": "fint",   
                "showValues" : "0",
                //Configuring div lines not to display as dashed.
                "divLineIsDashed": "0",
                //Configuring alpha
                "divlineAlpha" : "50"
            },            
            "categories": [
                {
                    "category": [
                        {
                            "label": "Jan"
                        }, 
                        {
                            "label": "Feb"
                        }, 
                        {
                            "label": "Mar"
                        }, 
                        {
                            "label": "Apr"
                        }, 
                        {
                            "label": "May"
                        }, 
                        {
                            "label": "Jun"
                        }, 
                        {
                            "label": "Jul"
                        }, 
                        {
                            "label": "Aug"
                        }, 
                        {
                            "label": "Sep"
                        }, 
                        {
                            "label": "Oct"
                        }, 
                        {
                            "label": "Nov"
                        }, 
                        {
                            "label": "Dec"
                        }
                    ]
                }
            ],
            
            "dataset": [
                {
                    "seriesname": "Earning",
                    "data": [
                        <% @earning.each_with_index do |earn ,index| %>
                        <% ind = 1 %>
                        <% while ind < earn.first.to_i  do %>
                        <% if ind == 1 %>
                        {
                        "value": "0K"
                        }
                        <% else %>
                        ,{
                        "value": "0K"
                        }
                        <% end %>
                        <% ind+=1 %>
                        <% end %>
                        <% if index == 0 && ind == 1 %>
                        {
                        "value": "<%= (earn.last.pluck(:total_bill).sum/1000).round(2) %>K"
                        }
                        <% else %>
                        ,{
                        "value": "<%= (earn.last.pluck(:total_bill).sum/1000).round(2) %>K"
                        }
                        <% end %>

                        <% end %>
                    ]
                }, 
                {
                    "seriesname": "Withdraw",
                    "data": [
                      <% @withdraws.each_with_index do |withdraw ,index| %>
                      <% ind = 1 %>
                      <% while ind < withdraw.first.to_i  do %>
                      <% if ind == 1 %>
                      {
                      "value": "0K"
                      }
                      <% else %>
                      ,{
                      "value": "0K"
                      }
                      <% end %>
                      <% ind+=1 %>
                      <% end %>
                      <% if index == 0 && ind == 1 %>
                      {
                      "value": "<%= (withdraw.last.pluck(:amount).sum/1000).round(2) %>K"
                      }
                      <% else %>
                      ,{
                      "value": "<%= (withdraw.last.pluck(:amount).sum/1000).round(2) %>K"
                      }
                      <% end %>

                      <% end %>
                    ]
                }
            ]
        }
    }).render();
});
</script>


<script>
  var map;
  var markersArray = [];
  var im = '../admin/mapmarker.png';
  <% if @wifis.count > 0 %>
    <% latio = @wifis.first.latitude %>
    <% longio = @wifis.first.longitude %>
  <% else %>
    <% latio = 37.0902 %>
    <% longio = 95.7129 %>
  <% end %>
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: <%= latio %>, lng: <%= longio %>},
      zoom: 10
    });
    clearOverlays();
    if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            //infoWindow.setPosition(pos);
            //infoWindow.setContent('Location found.');
            map.setCenter(pos);

            /*var userMarker = new google.maps.Marker({
              position: pos,
              map: map,
              icon: im
          });*/

          /*var cityCircle = new google.maps.Circle({
              strokeColor: '#70AAFA',
              strokeOpacity: 0.8,
              strokeWeight: 2,
              fillColor: '#70AAFA',
              fillOpacity: 0.25,
              map: map,
              center: pos,
              radius: 20
            });*/

          }, function() {
            //handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          //handleLocationError(false, infoWindow, map.getCenter());
        }

        var i = 0 ;
        <% @wifis.each do |wifi| %>

          temp_pos = {
              lat: <%= wifi.latitude %>,
              lng: <%= wifi.longitude %>
            };

          marker1 = new google.maps.Marker({
                  position: temp_pos,
                  map: map,
              icon: im

              });
              markersArray.push(marker1);


              infowindow = new google.maps.InfoWindow({
                maxWidth: 350
              });

              google.maps.event.addListener(marker1, 'click', (function(marker1, i) {
                return function() {
                    var markerid = marker1.alt;
                    var cs = '<div ><h3> <%= wifi.name %> </h3><div ><p><strong>Address:</strong> <%= wifi.address %> </p></div></div>';
                    infowindow.setContent(cs);
                    infowindow.open(map, marker1);


                }
              })(marker1, i));
            i = i + 1 ;
        <% end %>
  }

  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
      }

    function clearOverlays() {
    for (var i = 0; i < markersArray.length; i++ ) {
      markersArray[i].setMap(null);
    }
      markersArray.length = 0;
    }
</script>

<script type="text/javascript">
  FusionCharts.ready(function () {
    var revenueChart = new FusionCharts({
        type: 'doughnut2d',
        renderAt: 'conn-container',
        width: '100%',
        height: '450',
        dataFormat: 'json',
        dataSource: {
            "chart": {
                "caption": "Connections",
                "subCaption": "Active vs Disconnected",
                "numberPrefix": "",
                "paletteColors": "#0075c2,#1aaf5d,#f2c500,#f45b00,#8e0000",
                "bgColor": "#ffffff",
                "showBorder": "0",
                "use3DLighting": "0",
                "showShadow": "0",
                "enableSmartLabels": "0",
                "startingAngle": "310",
                "showLabels": "0",
                "showPercentValues": "1",
                "showLegend": "1",
                "legendShadow": "0",
                "legendBorderAlpha": "0",
                "defaultCenterLabel": "Total connections: <%= @act_conn + @non_act %>",
                "centerLabel": "$label: $value",
                "centerLabelBold": "1",
                "showTooltip": "0",
                "decimals": "0",
                "captionFontSize": "14",
                "subcaptionFontSize": "14",
                "subcaptionFontBold": "0"
            },
            "data": [
                {
                    "label": "Active",
                    "value": "<%= @act_conn %>"
                }, 
                {
                    "label": "Disconnected",
                    "value": "<%= @non_act %>"
                }
            ]
        }
    }).render();
});
</script>

<script type="text/javascript">
  FusionCharts.ready(function(){
    var salesChart = new FusionCharts({
        type: 'scrollline2d',
        dataFormat: 'json',
        renderAt: 'report-container',
        width: '100%',
        height: '450',
        dataSource: {
            "chart": {
                "caption": "Reprorts",
                "subCaption": "This Year",
                "xAxisName": "Month",
                "yAxisName": "Report",
                "showValues": "0",
                "numberPrefix": "",
                "showBorder": "0",
                "showShadow": "0",
                "bgColor": "#ffffff",
                "paletteColors": "#008ee4",
                "showCanvasBorder": "0",
                "showAxisLines": "0",
                "showAlternateHGridColor": "0",
                "divlineAlpha": "100",
                "divlineThickness": "1",
                "divLineIsDashed": "1",
                "divLineDashLen": "1",
                "divLineGapLen": "1",
                "lineThickness": "3",  
                "flatScrollBars": "1",
                "scrollheight": "10",
                "numVisiblePlot": "12",
                "showHoverEffect":"1"
            },
            "categories": [
                {
                    "category": [
                        { "label": "Jan" },
                        { "label": "Feb" },
                        { "label": "Mar" },
                        { "label": "Apr" },
                        { "label": "May" },
                        { "label": "Jun" },
                        { "label": "Jul" },
                        { "label": "Aug" },
                        { "label": "Sep" },
                        { "label": "Oct" },
                        { "label": "Nov" },
                        { "label": "Dec" }
                    ]
                }
            ],
            "dataset": [
                {
                    "data": [
                    <% @thisyear.each_with_index do |earn ,index| %>
                      <% ind = 1 %>
                      <% while ind < earn.first.to_i  do %>
                <% if ind == 1 %>
                          {
                              "value": "0"
                          }
                    <% else %>
                      ,{
                                   "value": "0"
                               }
                    <% end %>
                    <% ind+=1 %>
            <% end %>
                      <% if index == 0 && ind == 1 %>
                          {
                              "value": "<%= (earn.last.count) %>"
                          }
                  <% else %>
                      ,{
                                   "value": "<%= (earn.last.count) %>"
                               }
                  <% end %>
              
                    <% end %>
                    ]
                }
            ]
        }
    }).render();
});
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBoUyblkGqwp2lFuWQb0v_-J_mI5sYJYPc&callback=initMap"
async defer></script>